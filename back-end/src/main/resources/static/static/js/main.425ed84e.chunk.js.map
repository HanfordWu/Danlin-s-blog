{"version":3,"sources":["components/Header.js","components/Home.js","components/TestComponet.js","components/Article.js","components/Login.js","components/Projects.js","components/NewPost.js","App.js","serviceWorker.js","index.js"],"names":["Component","Home","props","state","articleList","displayArticles","map","element","index","console","log","year","key","className","blogs","article","dateTime","moment","createDate","format","data-id","id","onClick","e","changePage","title","href","type","axios","get","then","res","setState","data","catch","err","this","TestComponent","Article","currentArticle","articleId","target","content","Login","Form","Group","controlId","Label","Control","placeholder","Button","variant","Projects","NewPost","titleInput","React","createRef","contentInput","current","value","method","url","alert","message","error","preventDefault","onSubmit","handleLogin","style","fontSize","fontFamily","ref","as","rows","App","currentPage","mainContent","bind","pageName","event","undefined","getAttribute","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.425ed84e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\n\n\n\n\nclass Header extends Component {\n\n    constructor(props){\n        super(props);\n        this.changePageToHome = this.changePageToHome.bind(this);\n        this.changePageToProjects = this.changePageToProjects.bind(this)\n    }\n\n    changePageToHome = () => this.props.changePageToHome;\n    changePageToProjects = () => this.props.changePageToProjects;\n\n    render(){\n    return (\n        <div>\n            <header>\n                <div className=\"signatures site-title\">\n                    <a onClick={this.changePageToHome}>Danlin Hou</a>\n                </div>\n            </header>\n            <div className=\"row end-xs float\">\n                <div className=\"lang-switch col-xs-8 col-xs-offset-9\">\n                    {\" \"}\n                    <a onClick={this.changePageToProjects}>\n                        Projects\n                    </a>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    \n                    {\"\"}\n                    <a onClick={this.changePageToTest}>\n                        Danlin's Resume\n                    </a>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    {\" \"}\n                    <a onClick={this.changePageToLogin}>\n                        Login\n                    </a>\n                    \n                </div>\n\n                <div className=\"lang-switch col-xs-3 col-xs-offset-9\">\n                    \n                </div>\n            </div>\n        </div>\n    );\n}\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\n// import './staticfile/highlight.pack'\nimport \"../staticfile/flexboxgrid-6.3.1.min.css\";\nimport Header from \"./Header\";\nimport axios from \"axios\";\nimport moment from 'moment';\n\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    state = {\n      articleList: []\n    };\n\n\n   displayArticles = () =>{\n      return this.state.articleList.map((element, index) => {\n        console.log(element.year);\n        return (\n            <section key={index}>\n                <h1 className=\"site-date-catalog\">\n                    {element.year}\n                </h1>\n                {element.blogs.map((article, index) => {\n                    return (\n                        <div className=\"row posts-line\" key={index}>\n                            <div className=\"posts-date col-xs-2\">\n                                <time dateTime=\"2020-06-14 00:00:00 UTC\">\n                                    {moment(article.createDate).format('MMM Do')}\n                                </time>\n                            </div>\n                            <div className=\"posts-title col-xs-10\">\n                                <div className=\"row\">\n                                    <div className=\"col-xs-9 col-sm-10\">\n                                        <a data-id = {article.id}\n                                            onClick={(e) =>\n                                                this.props.changePage(\n                                                    \"article\", e\n                                                )\n                                            }\n                                        >\n                                            {article.title}\n                                        </a>\n                                    </div>\n                                    <div className=\"col-xs-3 col-sm-2 posts-categories\">\n                                        <div className=\"posts-category\">\n                                            <a href=\"https://blog.joway.io/categories/tech/\">\n                                                <strong>\n                                                    {article.type}\n                                                </strong>\n                                            </a>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    );\n                })}\n            </section>\n        );\n    })\n    }\n\n    componentDidMount(){\n          axios\n            .get(\"/getAllArticles\")\n            .then((res) => {\n              this.setState({\n                  articleList: res.data,\n              });\n            })\n            .catch((err) => {\n              console.log(err);\n            });\n    }\n\n    render() {\n        return (\n            <div id=\"posts-list\">\n                {this.displayArticles()}\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\n\nclass TestComponent extends Component {\n    state = {  }\n    render() { \n        return ( \n            <div>hello</div>\n         );\n    }\n}\n \nexport default TestComponent;","import React, { Component } from \"react\";\nimport Header from \"./Header\";\nimport axios from \"axios\";\nimport moment from 'moment';\n\n\nclass Article extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    state = {\n        currentArticle: -1,\n        article: ''\n    };\n\n    componentDidMount(){\n        axios\n            .get(\"/getArticle/\"+this.props.articleId)\n            .then((res) => {\n                console.log(res);\n              this.setState({\n                article: res.data,\n              });\n            })\n            .catch((err) => {\n              console.log(err);\n            });\n    }\n\n    \n\n\n\n    render() {\n        return (\n            <article className=\"post 简体中文\" id=\"article\">\n                <div className=\"row\">\n                    <div className=\"col-xs-12\">\n                        <header className=\"post-header\">\n                            <h1 className=\"post-title\">{this.state.article.title}</h1>\n                            <div className=\"row post-desc\">\n                                <div className=\"col-xs-6\">\n                                    <time\n                                        className=\"post-date\"\n                                        dateTime=\"2020-03-02 00:00:00 UTC\"\n                                    >\n                                        {moment(this.state.article.createDate).format('MMM Do YYYY')}\n                                    </time>\n                                </div>\n                                <div className=\"col-xs-6\">\n                                    <div className=\"post-author\">\n                                        <a\n                                            target=\"_blank\"\n                                            href=\"https://joway.io/\"\n                                        >\n                                            @Danlin\n                                        </a>\n                                    </div>\n                                </div>\n                            </div>\n                        </header>\n                        <div className=\"post-content markdown-body\">\n                            {this.state.article.content}\n                        </div>\n                        <div className=\"row middle-xs\">\n                            <div className=\"col-xs-12\">\n                                <div className=\"post-category\">\n                                    <a href=\"https://categories/thought/\">\n                                        Thought\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </article>\n        );\n    }\n}\n\nexport default Article;\n","import React, { Component } from 'react';\nimport Header from './Header';\n\nimport {Form, Button} from 'react-bootstrap';\n\n\nclass Login extends Component {\n    state = {  }\n    render() { \n        return (  \n<Form>\n  <Form.Group controlId=\"formBasicEmail\">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"Enter email\" />\n\n  </Form.Group>\n\n  <Form.Group controlId=\"formBasicPassword\">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"Password\" />\n  </Form.Group>\n\n  <Button variant=\"primary\" type=\"submit\">\n    Login\n  </Button>\n</Form>\n         \n         );\n    }\n}\n \nexport default Login;","import React, { Component } from 'react';\nimport Header from './Header';\n\nimport {Form, Button} from 'react-bootstrap';\n\n\nclass Projects extends Component {\n    state = {  }\n    render() { \n        return (  \n          <div id=\"posts-list\">\n            <h1 className=\"taxonomy-term\">Tech</h1>\n\n            <section>\n              <h1 className=\"site-date-catalog\">2020</h1>\n              <div className=\"row posts-line\">\n                <div className=\"posts-date col-xs-2\">\n                  <time dateTime=\"2020-06-14 00:00:00 UTC\">Jun 14</time>\n                </div>\n                <div className=\"posts-title col-xs-10\">\n                  <div className=\"row\">\n                    <div className=\"col-xs-12\">\n                      <a href=\"https://blog.joway.io/posts/deep-into-distributed-filesystem/\">分布式文件系统的演化</a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row posts-line\">\n                <div className=\"posts-date col-xs-2\">\n                  <time dateTime=\"2020-05-13 00:00:00 UTC\">May 13</time>\n                </div>\n                <div className=\"posts-title col-xs-10\">\n                  <div className=\"row\">\n                    <div className=\"col-xs-12\">\n                      <a href=\"https://blog.joway.io/posts/how-animal-crossing-online-work/\">从动物森友会聊主机游戏联机机制</a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </section>\n            \n            <div className=\"sub-header-line\" />\n            \n            \n            <h1 className=\"taxonomy-term\">Tech</h1>\n\n            <section>\n              <h1 className=\"site-date-catalog\">2020</h1>\n              <div className=\"row posts-line\">\n                <div className=\"posts-date col-xs-2\">\n                  <time dateTime=\"2020-06-14 00:00:00 UTC\">Jun 14</time>\n                </div>\n                <div className=\"posts-title col-xs-10\">\n                  <div className=\"row\">\n                    <div className=\"col-xs-12\">\n                      <a href=\"https://blog.joway.io/posts/deep-into-distributed-filesystem/\">分布式文件系统的演化</a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row posts-line\">\n                <div className=\"posts-date col-xs-2\">\n                  <time dateTime=\"2020-05-13 00:00:00 UTC\">May 13</time>\n                </div>\n                <div className=\"posts-title col-xs-10\">\n                  <div className=\"row\">\n                    <div className=\"col-xs-12\">\n                      <a href=\"https://blog.joway.io/posts/how-animal-crossing-online-work/\">从动物森友会聊主机游戏联机机制</a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </section>\n            <div className=\"sub-header-line\" />\n            <h1 className=\"taxonomy-term\">Tech</h1>\n            <section>\n              <h1 className=\"site-date-catalog\">2020</h1>\n              <div className=\"row posts-line\">\n                <div className=\"posts-date col-xs-2\">\n                  <time dateTime=\"2020-06-14 00:00:00 UTC\">Jun 14</time>\n                </div>\n                <div className=\"posts-title col-xs-10\">\n                  <div className=\"row\">\n                    <div className=\"col-xs-12\">\n                      <a href=\"https://blog.joway.io/posts/deep-into-distributed-filesystem/\">分布式文件系统的演化</a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row posts-line\">\n                <div className=\"posts-date col-xs-2\">\n                  <time dateTime=\"2020-05-13 00:00:00 UTC\">May 13</time>\n                </div>\n                <div className=\"posts-title col-xs-10\">\n                  <div className=\"row\">\n                    <div className=\"col-xs-12\">\n                      <a href=\"https://blog.joway.io/posts/how-animal-crossing-online-work/\">从动物森友会聊主机游戏联机机制</a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </section>\n          </div>\n        );\n    }\n}\n \nexport default Projects;","import React, { Component } from \"react\";\n\nimport { Form, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\n\n\nclass NewPost extends Component {\n\n  constructor(props){\n    super(props)\n    this.titleInput = React.createRef();\n    this.contentInput = React.createRef();\n  }\n\n\n    state = {};\n\n\n\n\n  handleLogin(e){\n      const title = this.titleInput.current.value;\n      const content = this.contentInput.current.value;\n\n      axios({\n        method: 'post',\n        url: '/saveArticle',\n        data: {\n          title: title,\n          content: content\n        }\n      }).then(\n        res => {\n          alert(res.message)\n        })\n        .catch(error => {\n          alert(error.message)\n        });\n      e.preventDefault()\n  }\n\n    render() {\n        return (\n            <Form onSubmit = {e => this.handleLogin(e)}>\n                <Form.Label>\n                    <div style={{ fontSize: \"20px\", fontFamily: \"serif\" }}>\n                        Blog Title\n                    </div>\n                </Form.Label>\n                <Form.Control ref={this.titleInput} type=\"text\" placeholder=\"Title\" />\n<br/>\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>\n                        <div style={{ fontSize: \"20px\", fontFamily: \"serif\" }}>\n                            Content:\n                        </div>\n                    </Form.Label>\n                    <Form.Control ref={this.contentInput} as=\"textarea\" rows=\"20\" placeholder=\"Transform MS. Word to html, then paste here ~~\" />\n                </Form.Group>\n\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n        );\n    }\n}\n\nexport default NewPost;\n","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Home from './components/Home';\nimport TestComponent from './components/TestComponet';\nimport Article from './components/Article';\nimport Login from './components/Login';\nimport Projects from './components/Projects';\nimport NewPost from './components/NewPost'\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.changePage = this.changePage.bind(this)\n    this.mainContent = this.mainContent.bind(this)\n}\n\n  state = { \n    currentPage: 'newPost',\n    articleId: -1,\n   }\n\n   changePage(pageName, event) {\n      this.setState({\n        currentPage: pageName,\n        articleId: event !== undefined && event.target.getAttribute(\"data-id\"),\n      })\n   }\n\n   mainContent = () => {\n    if (this.state.currentPage === 'home'){\n      return (<Home changePage = {this.changePage} />)\n    }\n\n    if (this.state.currentPage === 'test'){\n      return < TestComponent />\n    }\n    \n    if (this.state.currentPage === 'article'){\n      return <Article articleId = {this.state.articleId}/>\n    }\n\n    if (this.state.currentPage === 'login'){\n      return < Login></Login>\n    }\n\n    if (this.state.currentPage === 'projects'){\n      return <Projects></Projects>\n    }\n\n    if (this.state.currentPage === 'newPost'){\n      return <NewPost></NewPost>\n    }\n   }\n\n\n  render() {\n\n\n    return (\n      <div>\n        <article className=\"posts\">\n        <div className=\"row\">\n          <div className=\"col-xs-12\">\n          <div>\n            <header>\n                <div className=\"signatures site-title\">\n                    <a onClick={e => this.changePage(\"home\")}>Danlin Hou</a>\n                </div>\n            </header>\n            <div className=\"row end-xs float\">\n                <div className=\"lang-switch col-xs-8 col-xs-offset-9\">\n                    {\" \"}\n                    <a onClick={e => this.changePage(\"projects\")}>\n                        Projects\n                    </a>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    \n                    {\"\"}\n                    <a onClick={e => this.changePage(\"test\")}>\n                        Danlin's Resume\n                    </a>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    {\" \"}\n                    <a onClick={e => this.changePage(\"login\")}>\n                        Login\n                    </a>\n                    \n                </div>\n\n                <div className=\"lang-switch col-xs-3 col-xs-offset-9\">\n                    \n                </div>\n            </div>\n        </div>\n            <div className=\"header-line\" />\n            \n            \n            {this.mainContent()}\n            \n            \n            \n            <div className=\"site-footer\">\n              <div className=\"site-footer-item\"><a href=\"https://t.me/biosthinking\" target=\"_blank\">Telegram</a></div>\n              <div className=\"site-footer-item\"><a href=\"https://mailchi.mp/a1a0d59e7a19/joway\" target=\"_blank\">Subscribe</a></div>\n              <div className=\"site-footer-item\"><a href=\"https://blog.joway.io/index.xml\" target=\"_blank\">RSS</a>\n              </div>\n              <div className=\"site-footer-item\"><a href=\"https://blog.joway.io/travel\" target=\"_blank\">Travel</a>\n              </div>\n              <div className=\"site-footer-item\"><a href=\"https://joway.io/\" target=\"_blank\">About</a></div>\n            </div>\n          </div>\n        </div>\n      </article>\n    \n\n\n\n      </div>\n\n    )\n\n    \n    \n\n    \n    \n  }\n}\n \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}